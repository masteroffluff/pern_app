openapi: 3.0.3
info:
  title: Pern app
  version: 3.0.3
  description: Basic planner app  with small amout of social media functionality
paths:
  /login:
    summary: log in existing user
    description: "log in an existing user basis password and display name. "
    post:
      summary: "logs a user into the database returns the user id. "
      description: >-
        Logs the user into the database based on email address and password
        returns the id of the customer.
      operationId: post_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/login"
      responses:
        "201":
          description: User found
        "401":
          description: User/ password not accepted
        default:
          description: Default error sample response
      tags:
        - user
  /logout:
    summary: log out user
    get:
      summary: log out
      description: log user out and redirect them to the log in route.
      operationId: get_logout
      responses:
        "200":
          description: ok
          content:
            text/plain; charset=utf-8:
              examples:
                logout:
                  value: goodbye
        default:
          description: Default error sample response
      tags:
        - user
  /register:
    summary: register new user
    post:
      summary: adds new user
      description: "adds new user basis email, passowrd and display name. "
      operationId: post_register
      responses:
        "204":
          description: User created
        default:
          description: Default error sample response
      tags:
        - user
  /auth/github:
    summary: initial auth channel for github
  /user:
    summary: the path for the currently logged in user details
    get:
      summary: update the user
      description: update the user's details
      operationId: get_user
      security:
        - bearerAuth: []
      responses:
        default:
          description: Default error sample response
      tags:
        - user
    put:
      summary: update the user
      description: update the user's details
      operationId: update_user
      security:
        - bearerAuth: []
      responses:
        default:
          description: Default error sample response
      tags:
        - user
  /heartbeat:
    summary: hearbeat to check system is running
    get:
      summary: hearbeat to check system is running
      description: hearbeat to check system is running should always return '200'.
      operationId: get_heartbeat
      responses:
        "200":
          description: ok
        default:
          description: Default error sample response
      tags:
        - misc
  /friends:
    summary: user list of friends
    get:
      summary: get friends
      description: get the users friends
      operationId: get_friend
      security:
        - bearerAuth: []
      responses:
        default:
          description: Default error sample response
      tags:
        - Friends
    post:
      summary: add friend
      description: add a friend
      operationId: add_friend
      security:
        - bearerAuth: []
      responses:
        default:
          description: Default error sample response
      tags:
        - Friends
    put:
      summary: update a friend and return the updated list
      description: ""
      operationId: update_friend
      security:
        - bearerAuth: []
      responses:
        default:
          description: Default error sample response
      tags:
        - Friends
  /friends/potential:
    summary: list of potential friends
    description: "list of other users for the user to look for people to connect to. "
    get:
      summary: get a list of users the user is not friends with yet
      description: ""
      operationId: get_potentialFriends
      security:
        - bearerAuth: []
      responses:
        "200":
          description: list of potential friends
        default:
          description: Default error sample response
      tags:
        - Friends
  /friends/{action}:
    summary: confirm friend
    put:
      summary: update a friend and return the updated list
      description: ""
      operationId: confirm_friend
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: action
          schema:
            type: string
            enum:
              - confirm
              - unfollow
              - block
              - refollow
              - unblock
          required: true
          description: action type to take on listed friend
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/friend"
      responses:
        "200":
          description: A list of the users friends
        default:
          description: Default error sample response
      tags:
        - Friends
  /items/note:
    summary: path for note items
    get:
      summary: gets a list of notes in descending date order
      description: ""
      operationId: get_notes
      security:
        - bearerAuth: []
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - notes
    post:
      summary: post new note
      description: post new note and return updated list of notes in descending date order
      operationId: post_note
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newNote"
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - notes
    put:
      summary: update note
      description: update note and return update list of notes
      operationId: update_note
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateNote"
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - notes
    delete:
      summary: delete note
      description: delete note and return delete list of notes
      operationId: delete_note
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: item_id
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - notes
  /items/todo:
    summary: path for todo items
    get:
      summary: gets a list of todos in descending date order
      description: ""
      operationId: get_todos
      security:
        - bearerAuth: []
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - todos
    post:
      summary: post new todo
      description: post new todo and return updated list of todos in descending date order
      operationId: post_todo
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newTodo"
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - todos
    put:
      summary: update todo
      description: update todo and return update list of todos
      operationId: update_todo
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateTodo"
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - todos
    delete:
      summary: delete todo
      description: delete todo and return delete list of todos
      operationId: delete_todo
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - todos 
  /items/todo/items:
    summary: path for todo items
    post:
      summary: post new todo item
      description: post new todo item and return updated list of todos in descending date order, used after the toto has been created
      operationId: post_todo_items
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newTodo"
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - todos
    put:
      summary: update todo
      description: update todo item and return update list of todos
      operationId: update_todo_items
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateTodo"
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - todos
    delete:
      summary: delete todo
      description: delete todo item and return delete list of todos
      operationId: delete_todo_items
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: todo_item
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - todos          
  /calendar:
    summary: path for calendar items
    get:
      summary: gets a list of calendar in descending date order
      description: ""
      operationId: get_calendar
      security:
        - bearerAuth: []
      responses:
        default:
          description: Default error sample response
      tags:
        - items
        - calendar
    post:
      summary: post new calendar
      description: >-
        post new calendar and return updated list of calendar in descending date
        order
      operationId: post_calendar
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newCalendar"
      responses:
        200:
          description: return calendar items
        default:
          description: Default error sample response
      tags:
        - items
        - calendar
    put:
      summary: update calendar
      description: update calendar and return update list of calendar
      operationId: update_calendar
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateCalendar"
      responses:
        default:
          description: Default error sample response
      tags:
        - calendar
    delete:
      summary: delete calendar
      description: delete calendar item and return update list of calendar
      operationId: delete_calendar
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateCalendar"
      responses:
        default:
          description: Default error sample response
      tags:
        - calendar
  /calendar/attendees:
    summary: path for calendar items
    post:
      summary: add an attendee
      description: >-
        post new user as an attendee to an event/appointment 
      operationId: post_calendar_attendees
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newCalendar"
      responses:
        200:
          description: return calendar items
        default:
          description: Default error sample response
      tags:
        - items
        - calendar
    delete:
      summary: remove atendee from calendar item
      description: delete calendar item atendee  and return update list of calendar
      operationId: delete_calendar_attendees
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateCalendar"
      responses:
        default:
          description: Default error sample response
      tags:
        - calendar
  /wall:
    summary: gwet users wall
    get:
      summary: ""
      description: ""
      operationId: get_wall
      responses:
        default:
          description: Default error sample response
      tags:
        - wall
  /today:
    summary: get the calendar items for today
    get:
      summary: ""
      description: ""
      operationId: get_today
      responses:
        200:
          description: return todays calendar items
        default:
          description: Default error sample response
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: "JWT"
  schemas:
    login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    friend:
      type: object
      properties:
        id:
          type: number
        displayName:
          type: string
    updateNote:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        value:
          type: string
    newNote:
      type: object
      properties:
        title:
          type: string
        value:
          type: string
    deleteNote:
      type: object
      properties:
        id:
          type: number 
    deleteTodo:
      type: object
      properties:
        id:
          type: number 
    updateTodo:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        value:
          type: string
        todoItems:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              done:
                type: boolean
    newTodo:
      type: object
      properties:
        title:
          type: string
        value:
          type: string
    updateCalendar:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        value:
          type: string
        type:
          type: string
        dateFrom:
          type: string
          description: Start date
          example: "2017-01-01"
          format: date
          pattern: YYYY-MM-DD
          minLength: 0
          maxLength: 10
        dateTo:
          type: string
          description: Start date
          example: "2017-01-01"
          format: date
          pattern: YYYY-MM-DD
          minLength: 0
          maxLength: 10
    newCalendar:
      type: object
      properties:
        title:
          type: string
        value:
          type: string
  examples:
    listOfFriends:
      value: |-
        [
          { id:2 ,name: 'bob', status: 'friend' },
          { id:3 , name: 'charlie', status: 'unfollowed' },
          { id:4 , name: 'dan', status: 'blocked' },
          { id:5 , name: 'edd', status: 'pending' }
        ]
